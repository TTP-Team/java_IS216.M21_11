/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

/**
 *
 * @author Thanh PC
 */
import Model.ChiTietHoaDon;
import dao.KhachHangDAO;
import Model.KhachHang;
import Model.SanPham;
import dao.NhanVienDAO;
import dao.ChiTietHoaDonDAO;
import dao.SanPhamDAO;
import dao.HoaDonDAO;
import Model.HoaDon;
import com.toedter.calendar.JDateChooser;
import dao.SuKienDAO;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import java.io.*;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import java.text.NumberFormat;
import java.util.Locale;

public class HoaDonBanHang extends javax.swing.JFrame {

    private String phanQuyen;
    private String tenTaiKhoan;
    private DefaultTableModel model1;
    private DefaultTableModel model2;
    private JTextField tuKhoaField;
    private JDateChooser tuKhoaDate;
    private ArrayList<ChiTietHoaDon> arr_CTHD;
    private HoaDon newHoaDon;
    private String maSK;
    private DefaultTableModel SP_model;
    private DefaultTableModel KH_model;

    /**
     * Creates new form HoaDonBanHang
     */
    public HoaDonBanHang(String phanQuyen, String maNV) {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.VoHieuHoaBtn(false);
        this.ResetValue();
        this.getAllHoaDon();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        long millis = System.currentTimeMillis();
        java.sql.Date ngayHoaDon = new java.sql.Date(millis);
        NgayHoaDonField.setText(dateFormat.format(ngayHoaDon));
        maSK = SuKienDAO.getInstance().getMaSuKien(ngayHoaDon);
        if (maSK != null) {
            TenSuKienField.setText(SuKienDAO.getInstance().getById(maSK).getTenSuKien());
        }
        else{
            TenSuKienField.setText("");
        }
        this.tenTaiKhoan = maNV;
        this.phanQuyen = phanQuyen;
        TenNhanVienField.setText(NhanVienDAO.getInstance().getById(maNV).getTenNhanVien());
        this.setTimKiemField();
        DanhSachHoaDon.setRowHeight(25);
        DanhSachCTHD.setRowHeight(25);
        DanhSachSanPham.setRowHeight(20);
        DanhSachKhachHang.setRowHeight(25);
        this.getAllSanPham();
        this.getAllKhachHang();
        DanhSachCTHD.setEnabled(false);
        DanhSachSanPham.setEnabled(false);
        DanhSachKhachHang.setEnabled(false);
    }

    private void VoHieuHoaBtn(boolean val) {
        this.HuyBtn.setVisible(val);
        this.HuyHDBtn.setVisible(!val);
        this.ThoatBtn.setVisible(!val);
        this.MaKhachHangField.setEnabled(val);
        this.MaSanPhamField.setEnabled(val);
        this.TenSanPhamField.setEnabled(val);
        this.SoLuongField.setEnabled(val);
        this.ThemBtn.setVisible(val);
        this.TenKhachHangField.setEnabled(val);
    }

    private void ResetValue() {
        MaHoaDonField.setText("");
        MaKhachHangField.setText("");
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        long millis = System.currentTimeMillis();
        java.sql.Date ngayHoaDon = new java.sql.Date(millis);
        NgayHoaDonField.setText(dateFormat.format(ngayHoaDon));
        if (maSK != null) {
            TenSuKienField.setText(SuKienDAO.getInstance().getById(maSK).getTenSuKien());
        }
        else{
            TenSuKienField.setText("");
        }
        TenNhanVienField.setText(NhanVienDAO.getInstance().getById(tenTaiKhoan).getTenNhanVien());
        TenKhachHangField.setText("");
        SoLuongField.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DanhSachHoaDon = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        DanhSachCTHD = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        MaHoaDonLabel = new javax.swing.JLabel();
        MaHoaDonField = new javax.swing.JTextField();
        NgayHoaDonLabel = new javax.swing.JLabel();
        NgayHoaDonField = new javax.swing.JTextField();
        TenNhanVienLabel = new javax.swing.JLabel();
        TenNhanVienField = new javax.swing.JTextField();
        MaKhachHangLabel = new javax.swing.JLabel();
        MaKhachHangField = new javax.swing.JTextField();
        TenKhachHangLabel = new javax.swing.JLabel();
        TenKhachHangField = new javax.swing.JTextField();
        TenSuKienLabel = new javax.swing.JLabel();
        TenSuKienField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        DanhSachKhachHang = new javax.swing.JTable();
        Ten = new javax.swing.JPanel();
        MaSanPhamLabel = new javax.swing.JLabel();
        TenSanPhamLabel = new javax.swing.JLabel();
        TenSanPhamField = new javax.swing.JTextField();
        SoLuongLabel = new javax.swing.JLabel();
        SoLuongField = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        DanhSachSanPham = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        ThemBtn = new javax.swing.JButton();
        HuyBtn = new javax.swing.JButton();
        MaSanPhamField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        TuKhoaLabel = new javax.swing.JLabel();
        TimKiemTheoLabel = new javax.swing.JLabel();
        TimKiemField = new javax.swing.JComboBox<>();
        TimKiemBtn = new javax.swing.JButton();
        TimKiemPanel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        ThemHDBtn = new javax.swing.JButton();
        HuyHDBtn = new javax.swing.JButton();
        InHDBtn = new javax.swing.JButton();
        ThoatBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TriGiaValue = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        GiamGiaValue = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ThanhToanValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("CHI TIẾT HÓA ĐƠN");

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("HÓA ĐƠN");

        DanhSachHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        DanhSachHoaDon.setForeground(new java.awt.Color(0, 0, 0));
        DanhSachHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã khách hàng", "Mã nhân viên", "Mã sự kiện", "Ngày hóa đơn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DanhSachHoaDon.setGridColor(new java.awt.Color(102, 102, 102));
        DanhSachHoaDon.setSelectionBackground(new java.awt.Color(153, 255, 153));
        DanhSachHoaDon.setSelectionForeground(new java.awt.Color(0, 0, 0));
        DanhSachHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DanhSachHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DanhSachHoaDon);
        if (DanhSachHoaDon.getColumnModel().getColumnCount() > 0) {
            DanhSachHoaDon.getColumnModel().getColumn(0).setResizable(false);
            DanhSachHoaDon.getColumnModel().getColumn(1).setResizable(false);
            DanhSachHoaDon.getColumnModel().getColumn(2).setResizable(false);
            DanhSachHoaDon.getColumnModel().getColumn(3).setResizable(false);
            DanhSachHoaDon.getColumnModel().getColumn(4).setResizable(false);
        }

        DanhSachCTHD.setBackground(new java.awt.Color(255, 255, 255));
        DanhSachCTHD.setForeground(new java.awt.Color(0, 0, 0));
        DanhSachCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DanhSachCTHD.setGridColor(new java.awt.Color(102, 102, 102));
        DanhSachCTHD.setSelectionBackground(new java.awt.Color(153, 255, 153));
        DanhSachCTHD.setSelectionForeground(new java.awt.Color(0, 0, 0));
        DanhSachCTHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DanhSachCTHDKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(DanhSachCTHD);
        if (DanhSachCTHD.getColumnModel().getColumnCount() > 0) {
            DanhSachCTHD.getColumnModel().getColumn(0).setResizable(false);
            DanhSachCTHD.getColumnModel().getColumn(1).setResizable(false);
            DanhSachCTHD.getColumnModel().getColumn(2).setResizable(false);
            DanhSachCTHD.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(336, 336, 336)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(224, 224, 224))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(153, 153, 153)));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(153, 153, 153)));

        MaHoaDonLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        MaHoaDonLabel.setForeground(new java.awt.Color(0, 0, 0));
        MaHoaDonLabel.setText("Mã hóa đơn");

        MaHoaDonField.setEditable(false);
        MaHoaDonField.setBackground(new java.awt.Color(255, 255, 255));
        MaHoaDonField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        MaHoaDonField.setForeground(new java.awt.Color(0, 0, 0));
        MaHoaDonField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        MaHoaDonField.setDisabledTextColor(new java.awt.Color(102, 102, 102));

        NgayHoaDonLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        NgayHoaDonLabel.setForeground(new java.awt.Color(0, 0, 0));
        NgayHoaDonLabel.setText("Ngày hóa đơn");

        NgayHoaDonField.setEditable(false);
        NgayHoaDonField.setBackground(new java.awt.Color(255, 255, 255));
        NgayHoaDonField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        NgayHoaDonField.setForeground(new java.awt.Color(0, 0, 0));
        NgayHoaDonField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        NgayHoaDonField.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        TenNhanVienLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        TenNhanVienLabel.setForeground(new java.awt.Color(0, 0, 0));
        TenNhanVienLabel.setText("Tên nhân viên");

        TenNhanVienField.setEditable(false);
        TenNhanVienField.setBackground(new java.awt.Color(255, 255, 255));
        TenNhanVienField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TenNhanVienField.setForeground(new java.awt.Color(0, 0, 0));
        TenNhanVienField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        TenNhanVienField.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        MaKhachHangLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        MaKhachHangLabel.setForeground(new java.awt.Color(0, 0, 0));
        MaKhachHangLabel.setText("Mã khách hàng");

        MaKhachHangField.setBackground(new java.awt.Color(255, 255, 255));
        MaKhachHangField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        MaKhachHangField.setForeground(new java.awt.Color(0, 0, 0));
        MaKhachHangField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        MaKhachHangField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        MaKhachHangField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MaKhachHangFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MaKhachHangFieldKeyReleased(evt);
            }
        });

        TenKhachHangLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        TenKhachHangLabel.setForeground(new java.awt.Color(0, 0, 0));
        TenKhachHangLabel.setText("Tên khách hàng");

        TenKhachHangField.setBackground(new java.awt.Color(255, 255, 255));
        TenKhachHangField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TenKhachHangField.setForeground(new java.awt.Color(0, 0, 0));
        TenKhachHangField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        TenKhachHangField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TenKhachHangField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TenKhachHangFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TenKhachHangFieldKeyReleased(evt);
            }
        });

        TenSuKienLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        TenSuKienLabel.setForeground(new java.awt.Color(0, 0, 0));
        TenSuKienLabel.setText("Tên sự kiện");

        TenSuKienField.setEditable(false);
        TenSuKienField.setBackground(new java.awt.Color(255, 255, 255));
        TenSuKienField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TenSuKienField.setForeground(new java.awt.Color(0, 0, 0));
        TenSuKienField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        TenSuKienField.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        DanhSachKhachHang.setBackground(new java.awt.Color(255, 255, 255));
        DanhSachKhachHang.setForeground(new java.awt.Color(0, 0, 0));
        DanhSachKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Số điện thoại", "Địa chỉ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DanhSachKhachHang.setGridColor(new java.awt.Color(102, 102, 102));
        DanhSachKhachHang.setSelectionBackground(new java.awt.Color(153, 255, 153));
        DanhSachKhachHang.setSelectionForeground(new java.awt.Color(0, 0, 0));
        DanhSachKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DanhSachKhachHangMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(DanhSachKhachHang);
        if (DanhSachKhachHang.getColumnModel().getColumnCount() > 0) {
            DanhSachKhachHang.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MaHoaDonField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(MaHoaDonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenNhanVienLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenNhanVienField))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TenSuKienLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenSuKienField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NgayHoaDonField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NgayHoaDonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MaKhachHangField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenKhachHangLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenKhachHangField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaKhachHangLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MaHoaDonLabel)
                    .addComponent(NgayHoaDonLabel)
                    .addComponent(MaKhachHangLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MaHoaDonField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NgayHoaDonField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaKhachHangField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TenNhanVienLabel)
                    .addComponent(TenSuKienLabel)
                    .addComponent(TenKhachHangLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TenNhanVienField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenSuKienField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenKhachHangField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Ten.setBackground(new java.awt.Color(255, 255, 255));
        Ten.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(102, 102, 102)));
        Ten.setForeground(new java.awt.Color(0, 51, 204));

        MaSanPhamLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        MaSanPhamLabel.setForeground(new java.awt.Color(0, 0, 0));
        MaSanPhamLabel.setText("Mã sản phẩm");

        TenSanPhamLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        TenSanPhamLabel.setForeground(new java.awt.Color(0, 0, 0));
        TenSanPhamLabel.setText("Tên sản phẩm");

        TenSanPhamField.setBackground(new java.awt.Color(255, 255, 255));
        TenSanPhamField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TenSanPhamField.setForeground(new java.awt.Color(0, 0, 0));
        TenSanPhamField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        TenSanPhamField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TenSanPhamField.setEnabled(false);
        TenSanPhamField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TenSanPhamFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TenSanPhamFieldKeyReleased(evt);
            }
        });

        SoLuongLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        SoLuongLabel.setForeground(new java.awt.Color(0, 0, 0));
        SoLuongLabel.setText("Số lượng");

        SoLuongField.setBackground(new java.awt.Color(255, 255, 255));
        SoLuongField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        SoLuongField.setForeground(new java.awt.Color(0, 0, 0));
        SoLuongField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        DanhSachSanPham.setBackground(new java.awt.Color(255, 255, 255));
        DanhSachSanPham.setForeground(new java.awt.Color(0, 0, 0));
        DanhSachSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DanhSachSanPham.setGridColor(new java.awt.Color(102, 102, 102));
        DanhSachSanPham.setSelectionBackground(new java.awt.Color(153, 255, 153));
        DanhSachSanPham.setSelectionForeground(new java.awt.Color(0, 0, 0));
        DanhSachSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DanhSachSanPhamMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(DanhSachSanPham);
        if (DanhSachSanPham.getColumnModel().getColumnCount() > 0) {
            DanhSachSanPham.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new java.awt.GridLayout(1, 0, 40, 0));

        ThemBtn.setBackground(new java.awt.Color(0, 204, 102));
        ThemBtn.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        ThemBtn.setForeground(new java.awt.Color(255, 255, 255));
        ThemBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/add-product.png"))); // NOI18N
        ThemBtn.setText("Thêm");
        ThemBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ThemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemBtnActionPerformed(evt);
            }
        });
        jPanel9.add(ThemBtn);

        HuyBtn.setBackground(new java.awt.Color(0, 204, 102));
        HuyBtn.setForeground(new java.awt.Color(255, 255, 255));
        HuyBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/cancel.png"))); // NOI18N
        HuyBtn.setText("Hủy");
        HuyBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HuyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HuyBtnActionPerformed(evt);
            }
        });
        jPanel9.add(HuyBtn);

        MaSanPhamField.setBackground(new java.awt.Color(255, 255, 255));
        MaSanPhamField.setForeground(new java.awt.Color(0, 0, 0));
        MaSanPhamField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        MaSanPhamField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        MaSanPhamField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MaSanPhamFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MaSanPhamFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout TenLayout = new javax.swing.GroupLayout(Ten);
        Ten.setLayout(TenLayout);
        TenLayout.setHorizontalGroup(
            TenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TenLayout.createSequentialGroup()
                .addGroup(TenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TenLayout.createSequentialGroup()
                        .addGroup(TenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MaSanPhamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TenSanPhamField)
                            .addComponent(TenSanPhamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SoLuongField)
                            .addComponent(SoLuongLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaSanPhamField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        TenLayout.setVerticalGroup(
            TenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(TenLayout.createSequentialGroup()
                        .addComponent(MaSanPhamLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MaSanPhamField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TenSanPhamLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TenSanPhamField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SoLuongLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SoLuongField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 0, 0, new java.awt.Color(153, 153, 153)));

        TuKhoaLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        TuKhoaLabel.setForeground(new java.awt.Color(0, 0, 0));
        TuKhoaLabel.setText("Từ khóa");

        TimKiemTheoLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        TimKiemTheoLabel.setForeground(new java.awt.Color(0, 0, 0));
        TimKiemTheoLabel.setText("Tìm kiếm theo");

        TimKiemField.setBackground(new java.awt.Color(255, 255, 255));
        TimKiemField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TimKiemField.setForeground(new java.awt.Color(0, 0, 0));
        TimKiemField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TimKiemFieldItemStateChanged(evt);
            }
        });

        TimKiemBtn.setBackground(new java.awt.Color(0, 204, 102));
        TimKiemBtn.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        TimKiemBtn.setForeground(new java.awt.Color(255, 255, 255));
        TimKiemBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/search.png"))); // NOI18N
        TimKiemBtn.setText("Tìm kiếm");
        TimKiemBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TimKiemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimKiemBtnActionPerformed(evt);
            }
        });

        TimKiemPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout TimKiemPanelLayout = new javax.swing.GroupLayout(TimKiemPanel);
        TimKiemPanel.setLayout(TimKiemPanelLayout);
        TimKiemPanelLayout.setHorizontalGroup(
            TimKiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        TimKiemPanelLayout.setVerticalGroup(
            TimKiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TimKiemTheoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TuKhoaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(TimKiemField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TimKiemBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(TimKiemPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TimKiemTheoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TimKiemField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TuKhoaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TimKiemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(TimKiemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Ten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(Ten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.GridLayout(1, 0, 30, 0));

        ThemHDBtn.setBackground(new java.awt.Color(0, 204, 102));
        ThemHDBtn.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        ThemHDBtn.setForeground(new java.awt.Color(255, 255, 255));
        ThemHDBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/add.png"))); // NOI18N
        ThemHDBtn.setText("Thêm Hóa Đơn");
        ThemHDBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ThemHDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemHDBtnActionPerformed(evt);
            }
        });
        jPanel8.add(ThemHDBtn);

        HuyHDBtn.setBackground(new java.awt.Color(0, 204, 102));
        HuyHDBtn.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        HuyHDBtn.setForeground(new java.awt.Color(255, 255, 255));
        HuyHDBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/delete-button.png"))); // NOI18N
        HuyHDBtn.setText("Hủy hóa đơn");
        HuyHDBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HuyHDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HuyHDBtnActionPerformed(evt);
            }
        });
        jPanel8.add(HuyHDBtn);

        InHDBtn.setBackground(new java.awt.Color(0, 204, 102));
        InHDBtn.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        InHDBtn.setForeground(new java.awt.Color(255, 255, 255));
        InHDBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/printer.png"))); // NOI18N
        InHDBtn.setText("In hóa đơn");
        InHDBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        InHDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InHDBtnActionPerformed(evt);
            }
        });
        jPanel8.add(InHDBtn);

        ThoatBtn.setBackground(new java.awt.Color(0, 204, 102));
        ThoatBtn.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        ThoatBtn.setForeground(new java.awt.Color(255, 255, 255));
        ThoatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/exit.png"))); // NOI18N
        ThoatBtn.setText("Thoát");
        ThoatBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ThoatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThoatBtnActionPerformed(evt);
            }
        });
        jPanel8.add(ThoatBtn);

        jPanel5.setBackground(new java.awt.Color(0, 204, 102));

        jLabel2.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("HÓA ĐƠN BÁN HÀNG");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(551, 551, 551))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setText("TỔNG TIỀN");

        TriGiaValue.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        TriGiaValue.setForeground(new java.awt.Color(204, 0, 51));
        TriGiaValue.setText("0");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 102));
        jLabel5.setText("GIẢM GIÁ");

        GiamGiaValue.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        GiamGiaValue.setForeground(new java.awt.Color(0, 204, 102));
        GiamGiaValue.setText("0");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("THANH TOÁN");

        ThanhToanValue.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        ThanhToanValue.setForeground(new java.awt.Color(0, 0, 204));
        ThanhToanValue.setText("0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TriGiaValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GiamGiaValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ThanhToanValue, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TriGiaValue))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(GiamGiaValue))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ThanhToanValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TimKiemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimKiemBtnActionPerformed
        // TODO add your handling code here:
        String timKiemTheo = (String) TimKiemField.getSelectedItem();
        ArrayList<HoaDon> hoaDon = null;
        if (model2 != null) {
            model2.setRowCount(0);
        }
        if (!"".equals(tuKhoaField.getText()) || tuKhoaDate != null) {
            if ("Mã hóa đơn".equals(timKiemTheo)) {
                hoaDon.add(HoaDonDAO.getInstance().getById(tuKhoaField.getText()));
            } else if ("Mã khách hàng".equals(timKiemTheo)) {
                hoaDon = HoaDonDAO.getInstance().getByMaKhachHang(tuKhoaField.getText());
            } else if ("Mã nhân viên".equals(timKiemTheo)) {
                hoaDon = HoaDonDAO.getInstance().getByMaNhanVien(tuKhoaField.getText());
            } else if ("Ngày hóa đơn".equals(timKiemTheo)) {
                hoaDon = HoaDonDAO.getInstance().getByNgayHoaDon(new Date(tuKhoaDate.getDate().getTime()));
            } 
            if(hoaDon != null || !tuKhoaField.getText().contains("%"))
                this.hienThiHoaDon(hoaDon);
            else
                JOptionPane.showMessageDialog(null,
                                "Không tìm thấy!",
                                "",
                                JOptionPane.ERROR_MESSAGE);
        } else
            this.getAllHoaDon();
    }//GEN-LAST:event_TimKiemBtnActionPerformed

    private void MaKhachHangFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MaKhachHangFieldKeyPressed
        // TODO add your handling code here:
        TenKhachHangField.setText("");
    }//GEN-LAST:event_MaKhachHangFieldKeyPressed

    private void DanhSachHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DanhSachHoaDonMouseClicked
        // TODO add your handling code here:
        int index = DanhSachHoaDon.getSelectedRow();
        ArrayList<ChiTietHoaDon> cthd = ChiTietHoaDonDAO.getInstance().getById((String) model1.getValueAt(index, 0));
        this.hienThiChiTietHoaDon(cthd);
        ThanhToanValue.setText(DinhDangTienTe(HoaDonDAO.getInstance().getById((String) model1.getValueAt(index, 0)).getTriGia()));
        MaHoaDonField.setText((String) model1.getValueAt(index, 0));
        MaKhachHangField.setText((String) model1.getValueAt(index, 1));
        TenKhachHangField.setText(KhachHangDAO.getInstance().getById(MaKhachHangField.getText()).getHoTen());
        TenNhanVienField.setText(NhanVienDAO.getInstance().getById((String) model1.getValueAt(index, 2)).getTenNhanVien());
        TenSuKienField.setText(SuKienDAO.getInstance().getById((String) model1.getValueAt(index, 3)).getTenSuKien());
        NgayHoaDonField.setText((String) model1.getValueAt(index, 4));
    }//GEN-LAST:event_DanhSachHoaDonMouseClicked

    public String DinhDangTienTe(double soTien) {
        Locale localeEN = new Locale("en", "EN");
        NumberFormat en = NumberFormat.getInstance(localeEN);
        String str = en.format(soTien);
        return str;
    }

    private void ThemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemBtnActionPerformed
        // TODO add your handling code here:
        String maSanPham = MaSanPhamField.getText();
        int soSanPham = SanPhamDAO.getInstance().getById(maSanPham).getSoLuong();
        int soLuong = 0;

        if (!"".equals(this.SoLuongField.getText()) && !"".equals(this.MaSanPhamField.getText()) && !"".equals(this.TenSanPhamField.getText())) {
            try {
                soLuong = Integer.parseInt(SoLuongField.getText());
                if (soLuong <= 0) {
                    throw new ArithmeticException("");
                }
                if (soLuong <= soSanPham) {
                    ChiTietHoaDon cthd = new ChiTietHoaDon("", maSanPham, soLuong);
                    if (!arr_CTHD.isEmpty()) {
                        Them:
                        for (ChiTietHoaDon i : arr_CTHD) {
                            int sl = i.getSoLuong();
                            if (i.getMaSanPham().equals(maSanPham)) {
                                int slc = soSanPham - sl;
                                if (soLuong > slc) {
                                    JOptionPane.showMessageDialog(rootPane, "Số lượng sản phẩm còn lại: " + slc);
                                    break Them;
                                } else {
                                    i.setSoLuong(sl + Integer.parseInt(SoLuongField.getText()));
                                }
                            } else {
                                arr_CTHD.add(cthd);
                                break;
                            }
                        }
                        this.hienThiChiTietHoaDon(arr_CTHD);
                    } else {
                        arr_CTHD.add(cthd);
                        this.hienThiChiTietHoaDon(arr_CTHD);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Số lượng sản phẩm còn lại: " + soSanPham);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,
                        "Số lượng là chữ số lớn hơn 0",
                        "",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "Vui lòng nhập đầy đủ thông tin",
                    "",
                    JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_ThemBtnActionPerformed

    private void ThemHDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemHDBtnActionPerformed
        // TODO add your handling code here:
        if ("Thêm Hóa Đơn".equals(ThemHDBtn.getText())) {
            DanhSachCTHD.setEnabled(true);
            DanhSachSanPham.setEnabled(true);
            DanhSachKhachHang.setEnabled(true);
            ThemHDBtn.setText("Tính Tiền");
            ThanhToanValue.setText("0");
            arr_CTHD = new ArrayList<>();
            if (model1 != null) {
                model1.setRowCount(0);
            }
            if (model2 != null) {
                model2.setRowCount(0);
            }
            this.InHDBtn.setVisible(false);
            ResetValue();
            VoHieuHoaBtn(true);
        } else if ("Tính Tiền".equals(ThemHDBtn.getText())) {
            if (!arr_CTHD.isEmpty()) {
                DanhSachCTHD.setEnabled(false);
                DanhSachSanPham.setEnabled(false);
                DanhSachKhachHang.setEnabled(false);
                Date ngayHoaDon = null;
                ThemHDBtn.setText("Thêm Hóa Đơn");
                this.InHDBtn.setVisible(true);
                try {
                    ngayHoaDon = new Date(new SimpleDateFormat("dd/MM/yyyy").parse(NgayHoaDonField.getText()).getTime());
                } catch (ParseException ex) {
                    Logger.getLogger(QuanLyKhachHang.class.getName()).log(Level.SEVERE, null, ex);
                }
                String stt = HoaDonDAO.getInstance().getSoThuTu();
                newHoaDon = new HoaDon(stt, MaKhachHangField.getText(), tenTaiKhoan, maSK, ngayHoaDon, 0);
                HoaDonDAO.getInstance().insert(newHoaDon);
                for (ChiTietHoaDon i : arr_CTHD) {
                    i.setMaHoaDon(newHoaDon.getMaHoaDon());
                    ChiTietHoaDonDAO.getInstance().insert(i);
                }
                MaHoaDonField.setText(stt);
                TriGiaValue.setText(DinhDangTienTe(HoaDonDAO.getInstance().getById(newHoaDon.getMaHoaDon()).getTriGia()));
                GiamGiaValue.setText(DinhDangTienTe(HoaDonDAO.getInstance().tienGiamGia(newHoaDon.getMaHoaDon())));
                ThanhToanValue.setText(DinhDangTienTe(HoaDonDAO.getInstance().tienThanhToan(newHoaDon.getMaHoaDon())));
            } else {
                JOptionPane.showMessageDialog(null,
                        "Vui lòng chọn sản phẩm",
                        "",
                        JOptionPane.ERROR_MESSAGE);
            }

        }


    }//GEN-LAST:event_ThemHDBtnActionPerformed

    private void TimKiemFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TimKiemFieldItemStateChanged
        // TODO add your handling code here:
        if ("Ngày hóa đơn".equals((String) TimKiemField.getSelectedItem())) {
            tuKhoaDate = new JDateChooser();
            tuKhoaDate.setDateFormatString("dd/MM/yyyy");
            tuKhoaDate.setPreferredSize(new Dimension(TimKiemPanel.getWidth(), TimKiemPanel.getHeight()));
            TimKiemPanel.removeAll();
            TimKiemPanel.setLayout(new CardLayout());
            TimKiemPanel.add(tuKhoaDate);
            TimKiemPanel.validate();
            TimKiemPanel.repaint();
        } else {
            tuKhoaField = new JTextField();
            tuKhoaField.setPreferredSize(new Dimension(TimKiemPanel.getWidth(), TimKiemPanel.getHeight()));
            TimKiemPanel.removeAll();
            TimKiemPanel.setLayout(new CardLayout());
            TimKiemPanel.add(tuKhoaField);
            TimKiemPanel.validate();
            TimKiemPanel.repaint();
        }
    }//GEN-LAST:event_TimKiemFieldItemStateChanged

    private void HuyHDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HuyHDBtnActionPerformed
        // TODO add your handling code here:
        int index = DanhSachHoaDon.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(null,
                    "Chọn hóa đơn cần hủy",
                    "",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            int result = JOptionPane.showConfirmDialog(null,
                    "Bạn muốn hủy hóa đơn này ?",
                    "Xác nhận",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (result == JOptionPane.YES_OPTION) {

                int kq = HoaDonDAO.getInstance().delete((String) model1.getValueAt(index, 0));;
                if (kq == 1) {
                    this.getAllHoaDon();
                    JOptionPane.showMessageDialog(null,
                            "Hủy hóa đơn thành công",
                            "",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Không thể hủy hóa đơn",
                            "",
                            JOptionPane.ERROR_MESSAGE);

                }
            }
        }
    }//GEN-LAST:event_HuyHDBtnActionPerformed

    private void InHDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InHDBtnActionPerformed
        // TODO add your handling code here:
        if ("".equals(MaHoaDonField.getText())) {
            JOptionPane.showMessageDialog(null,
                    "Vui lòng chọn hóa đơn",
                    "",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            Document doc = new Document(PageSize.A5);
            String fileName = MaHoaDonField.getText();
            try {
                PdfWriter writer = PdfWriter.getInstance(doc, new FileOutputStream("D:\\tptsport\\bills\\" + fileName + ".pdf"));
                doc.open();
                File fileFontTieuDe = new File("src/resources/fonts/vuArialBold.ttf");
                BaseFont bfTieuDe = BaseFont.createFont(fileFontTieuDe.getAbsolutePath(), BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                Font fontTieuDe1 = new Font(bfTieuDe, 15);
                Font fontTieuDe2 = new Font(bfTieuDe, 13);
                File fileFontNoiDung = new File("src/resources/fonts/vuArial.ttf");
                BaseFont bfNoiDung = BaseFont.createFont(fileFontNoiDung.getAbsolutePath(), BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                Font fontNoiDung1 = new Font(bfNoiDung, 13);
                Font fontNoiDung2 = new Font(bfNoiDung, 12);

                Paragraph prgTenCuaHang = new Paragraph("TPT SPORT", fontTieuDe1);
                prgTenCuaHang.setAlignment(Element.ALIGN_CENTER);
                doc.add(prgTenCuaHang);

                Paragraph prgDiaChi = new Paragraph("123 Đường số 4, Phường Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh, Việt Nam", fontNoiDung2);
                prgDiaChi.setAlignment(Element.ALIGN_CENTER);
                prgDiaChi.setAlignment(Paragraph.ALIGN_CENTER);
                prgDiaChi.setSpacingBefore(10);
                doc.add(prgDiaChi);
//
                Paragraph prgTieuDe = new Paragraph("PHIẾU THANH TOÁN", fontTieuDe1);
                prgTieuDe.setAlignment(Element.ALIGN_CENTER);
                prgTieuDe.setSpacingBefore(20);
                prgTieuDe.setSpacingAfter(20);
                doc.add(prgTieuDe);

                List listTTHD = new List(List.UNORDERED);
                listTTHD.add(new ListItem("Mã hóa đơn: " + MaHoaDonField.getText(), fontNoiDung1));
                listTTHD.add(new ListItem("Tên nhân viên: " + TenNhanVienField.getText(), fontNoiDung1));
                listTTHD.add(new ListItem("Ngày hóa đơn: " + NgayHoaDonField.getText(), fontNoiDung1));
                doc.add(listTTHD);

                PdfPTable tableSP = new PdfPTable(4);
                tableSP.setWidthPercentage(95);
                tableSP.setSpacingBefore(20);
                tableSP.setSpacingAfter(20);

                float[] tableSP_colWidths = {250, 100, 200, 200};
                tableSP.setWidths(tableSP_colWidths);
                PdfPCell cellTDSP = new PdfPCell(new Paragraph("Tên sản phẩm", fontTieuDe2));
                cellTDSP.setBorder(0);
                cellTDSP.setPaddingTop(6);
                cellTDSP.setPaddingBottom(6);
                cellTDSP.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDSP.setVerticalAlignment(Element.ALIGN_MIDDLE);

                tableSP.addCell(cellTDSP);

                PdfPCell cellTDSL = new PdfPCell(new Paragraph("SL", fontTieuDe2));
                cellTDSL.setBorder(0);
                cellTDSL.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDSL.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cellTDSL.setPaddingTop(6);
                cellTDSL.setPaddingBottom(6);
                tableSP.addCell(cellTDSL);

                PdfPCell cellTDDG = new PdfPCell(new Paragraph("Đơn giá", fontTieuDe2));
                cellTDDG.setBorder(0);
                cellTDDG.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDDG.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tableSP.addCell(cellTDDG);

                PdfPCell cellTDTT = new PdfPCell(new Paragraph("Thành tiền", fontTieuDe2));
                cellTDTT.setBorder(0);
                cellTDTT.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDTT.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cellTDTT.setPaddingTop(6);
                cellTDTT.setPaddingBottom(6);
                tableSP.addCell(cellTDTT);

                ArrayList<ChiTietHoaDon> cthd = ChiTietHoaDonDAO.getInstance().getById(MaHoaDonField.getText());
                double tongTien = 0;
                for (ChiTietHoaDon i : cthd) {
                    String tenSP = SanPhamDAO.getInstance().getById(i.getMaSanPham()).getTenSanPham();
                    PdfPCell cellSP = new PdfPCell(new Paragraph(tenSP, fontNoiDung1));
                    cellSP.setBorder(0);
                    cellSP.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellSP.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cellSP.setPaddingTop(6);
                    cellSP.setPaddingBottom(6);
                    tableSP.addCell(cellSP);

                    PdfPCell cellSL = new PdfPCell(new Paragraph(String.valueOf(i.getSoLuong()), fontNoiDung1));
                    cellSL.setBorder(0);
                    cellSL.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellSL.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cellSL.setPaddingTop(6);
                    cellSL.setPaddingBottom(6);
                    tableSP.addCell(cellSL);

                    double donGia;
                    if (i.getSoLuong() > 10) {
                        donGia = SanPhamDAO.getInstance().getById(i.getMaSanPham()).getDonGiaSi();
                    } else {
                        donGia = SanPhamDAO.getInstance().getById(i.getMaSanPham()).getDonGiaLe();
                    }

                    PdfPCell cellDG = new PdfPCell(new Paragraph(DinhDangTienTe(donGia), fontNoiDung1));
                    cellDG.setBorder(0);
                    cellDG.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellDG.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cellDG.setPaddingTop(6);
                    cellDG.setPaddingBottom(6);
                    tableSP.addCell(cellDG);

                    PdfPCell cellTT = new PdfPCell(new Paragraph(DinhDangTienTe((double) i.getSoLuong() * donGia), fontNoiDung1));
                    cellTT.setBorder(0);
                    cellTT.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellTT.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cellTT.setPaddingTop(6);
                    cellTT.setPaddingBottom(6);
                    tableSP.addCell(cellTT);

                    tongTien = tongTien + (i.getSoLuong() * donGia);
                }
                doc.add(tableSP);

                PdfPTable tableTinhTien = new PdfPTable(2);
                tableTinhTien.setWidthPercentage(95);
                tableTinhTien.setSpacingAfter(20);

                float[] tableTinhTien_colWidths = {500, 250};
                tableTinhTien.setWidths(tableTinhTien_colWidths);

                PdfPCell cellTDTC = new PdfPCell(new Paragraph("Tổng tiền: \n\nGiảm giá: \n\nThanh toán:", fontTieuDe2));
                cellTDTC.setBorder(0);
                cellTDTC.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cellTDTC.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tableTinhTien.addCell(cellTDTC);
                PdfPCell cellTC = new PdfPCell(new Paragraph(TriGiaValue.getText() + "\n\n" + GiamGiaValue.getText() + "\n\n" + ThanhToanValue.getText(), fontNoiDung1));
                cellTC.setBorder(0);
                cellTC.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTC.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tableTinhTien.addCell(cellTC);
                doc.add(tableTinhTien);
                doc.close();
                writer.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                File f = new File("D:\\tptsport\\bills\\" + fileName + ".pdf");
                if (!Desktop.isDesktopSupported()) {
                    System.out.println("not supported");
                    return;
                }
                Desktop dk = Desktop.getDesktop();
                if (f.exists()) {
                    dk.open(f);
                }
            } catch (Exception e) {
            }
        }

        this.ResetValue();
        this.VoHieuHoaBtn(false);
        this.getAllHoaDon();

    }//GEN-LAST:event_InHDBtnActionPerformed

    private void ThoatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThoatBtnActionPerformed
        // TODO add your handling code here:
        if ("QL".equals(phanQuyen)) {
            new QuanLy_View(phanQuyen, tenTaiKhoan);
        } else if ("NVBH".equals(phanQuyen)) {
            new NhanVienBanHang_View(phanQuyen, tenTaiKhoan);
        } else if ("TK".equals(phanQuyen)) {
            new ThuKho_View(phanQuyen, tenTaiKhoan);
        }
        this.dispose();
    }//GEN-LAST:event_ThoatBtnActionPerformed

    private void HuyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HuyBtnActionPerformed
        // TODO add your handling code here:
        VoHieuHoaBtn(false);
        ThemHDBtn.setText("Thêm Hóa Đơn");
        this.getAllHoaDon();
        InHDBtn.setVisible(true);
        SoLuongField.setText("0");
        DanhSachCTHD.setEnabled(false);
        DanhSachSanPham.setEnabled(false);
        DanhSachKhachHang.setEnabled(false);
    }//GEN-LAST:event_HuyBtnActionPerformed

    private void DanhSachSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DanhSachSanPhamMouseClicked
        // TODO add your handling code here:
        int index = DanhSachSanPham.getSelectedRow();
        MaSanPhamField.setText((String) SP_model.getValueAt(index, 0));
        TenSanPhamField.setText((String) SP_model.getValueAt(index, 1));
    }//GEN-LAST:event_DanhSachSanPhamMouseClicked

    private void MaSanPhamFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MaSanPhamFieldKeyPressed
        // TODO add your handling code here:
        TenSanPhamField.setText("");
    }//GEN-LAST:event_MaSanPhamFieldKeyPressed

    private void TenSanPhamFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TenSanPhamFieldKeyPressed
        // TODO add your handling code here:
        MaSanPhamField.setText("");
    }//GEN-LAST:event_TenSanPhamFieldKeyPressed

    private void MaSanPhamFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MaSanPhamFieldKeyReleased
        // TODO add your handling code here:
        ArrayList<SanPham> sp = SanPhamDAO.getInstance().getByMaSanPham(MaSanPhamField.getText());
        this.hienThiDanhSachSanPham(sp);
    }//GEN-LAST:event_MaSanPhamFieldKeyReleased

    private void TenSanPhamFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TenSanPhamFieldKeyReleased
        // TODO add your handling code here:
        ArrayList<SanPham> sp = SanPhamDAO.getInstance().getByTen(TenSanPhamField.getText());
        this.hienThiDanhSachSanPham(sp);
    }//GEN-LAST:event_TenSanPhamFieldKeyReleased

    private void DanhSachKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DanhSachKhachHangMouseClicked
        // TODO add your handling code here:
        int index = DanhSachKhachHang.getSelectedRow();
        MaKhachHangField.setText((String) KH_model.getValueAt(index, 0));
        TenKhachHangField.setText((String) KH_model.getValueAt(index, 1));
    }//GEN-LAST:event_DanhSachKhachHangMouseClicked

    private void MaKhachHangFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MaKhachHangFieldKeyReleased
        // TODO add your handling code here:
        ArrayList<KhachHang> kh = KhachHangDAO.getInstance().getByMaKhachHang(MaKhachHangField.getText());
        this.hienThiDanhSachKhachhang(kh);

    }//GEN-LAST:event_MaKhachHangFieldKeyReleased

    private void TenKhachHangFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TenKhachHangFieldKeyReleased
        // TODO add your handling code here:
        ArrayList<KhachHang> kh = KhachHangDAO.getInstance().getByTen(TenKhachHangField.getText());
        this.hienThiDanhSachKhachhang(kh);
    }//GEN-LAST:event_TenKhachHangFieldKeyReleased

    private void TenKhachHangFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TenKhachHangFieldKeyPressed
        // TODO add your handling code here:
        this.MaKhachHangField.setText("");
    }//GEN-LAST:event_TenKhachHangFieldKeyPressed

    private void DanhSachCTHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DanhSachCTHDKeyReleased
        // TODO add your handling code here:
        int index = DanhSachCTHD.getSelectedRow();
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            arr_CTHD.remove(index);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int soSanPham = SanPhamDAO.getInstance().getById(model2.getValueAt(index, 0).toString()).getSoLuong();
            int soLuong = 0;
            try {
                soLuong = Integer.parseInt(model2.getValueAt(index, 2).toString());
                if (soLuong < 0) {
                    throw new ArithmeticException("");
                }                
                if(soLuong <= soSanPham){
                    if(soLuong == 0){
                        arr_CTHD.remove(index);
                    }
                    else{
                         ChiTietHoaDon t = new ChiTietHoaDon("", model2.getValueAt(index, 0).toString(), soLuong);
                    arr_CTHD.set(index, t);
                    }                  
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "Số lượng sản phẩm còn lại: " + soSanPham);
                    SoLuongField.setFocusable(true);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,
                        "Số lượng là chữ số lớn hơn 0",
                        "",
                        JOptionPane.ERROR_MESSAGE);
            }
            
        }
        if (arr_CTHD != null) {
            this.hienThiChiTietHoaDon(arr_CTHD);
        }
    }//GEN-LAST:event_DanhSachCTHDKeyReleased

    private void hienThiHoaDon(ArrayList<HoaDon> t) {
        model1 = (DefaultTableModel) DanhSachHoaDon.getModel();
        model1.setRowCount(0);
        for (HoaDon i : t) {
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            String ngayHoaDon = dateFormat.format(i.getNgayHoaDon());
            String[] dataRow = {i.getMaHoaDon(), i.getMaKhachHang(), i.getMaNhanVien(), i.getMaSuKien(), ngayHoaDon};
            model1.addRow(dataRow);
        }
    }

    private void getAllHoaDon() {
        ArrayList<HoaDon> hoaDon = HoaDonDAO.getInstance().getAll();
        this.hienThiHoaDon(hoaDon);
    }

    private void hienThiChiTietHoaDon(ArrayList<ChiTietHoaDon> t) {
        model2 = (DefaultTableModel) DanhSachCTHD.getModel();
        double donGia;
        if (model2 != null) {
            model2.setRowCount(0);
        }
        for (ChiTietHoaDon i : t) {
            String tensanPham = SanPhamDAO.getInstance().getById(i.getMaSanPham()).getTenSanPham();
            if (i.getSoLuong() >= 10) {
                donGia = SanPhamDAO.getInstance().getById(i.getMaSanPham()).getDonGiaSi();
            } else {
                donGia = SanPhamDAO.getInstance().getById(i.getMaSanPham()).getDonGiaLe();
            }
            String[] dataRow = {i.getMaSanPham(), tensanPham, String.valueOf(i.getSoLuong()), String.valueOf(donGia)};
            model2.addRow(dataRow);
        }

    }

    private void hienThiDanhSachSanPham(ArrayList<SanPham> t) {
        SP_model = (DefaultTableModel) DanhSachSanPham.getModel();

        SP_model.setRowCount(0);
        for (SanPham i : t) {
            String[] dataRow = {i.getMaSanPham(), i.getTenSanPham(), String.valueOf(i.getSoLuong())};
            SP_model.addRow(dataRow);
        }
    }

    private void getAllSanPham() {
        ArrayList<SanPham> sanPham = SanPhamDAO.getInstance().getAll();
        this.hienThiDanhSachSanPham(sanPham);
    }

    private void setTimKiemField() {
        String[] tenCot = {"Mã hóa đơn", "Mã khách hàng", "Mã nhân viên", "Ngày hóa đơn"};
        for (int i = 0; i < tenCot.length; i++) {
            TimKiemField.addItem(tenCot[i]);
        }
    }

    private void hienThiDanhSachKhachhang(ArrayList<KhachHang> t) {
        KH_model = (DefaultTableModel) DanhSachKhachHang.getModel();

        KH_model.setRowCount(0);
        for (KhachHang i : t) {
            String[] dataRow = {i.getMaKhachHang(), i.getHoTen(), i.getSoDienThoai(), i.getDiaChi()};
            KH_model.addRow(dataRow);
        }
    }

    private void getAllKhachHang() {
        ArrayList<KhachHang> khachHang = KhachHangDAO.getInstance().getAll();
        this.hienThiDanhSachKhachhang(khachHang);
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DanhSachCTHD;
    private javax.swing.JTable DanhSachHoaDon;
    private javax.swing.JTable DanhSachKhachHang;
    private javax.swing.JTable DanhSachSanPham;
    private javax.swing.JLabel GiamGiaValue;
    private javax.swing.JButton HuyBtn;
    private javax.swing.JButton HuyHDBtn;
    private javax.swing.JButton InHDBtn;
    private javax.swing.JTextField MaHoaDonField;
    private javax.swing.JLabel MaHoaDonLabel;
    private javax.swing.JTextField MaKhachHangField;
    private javax.swing.JLabel MaKhachHangLabel;
    private javax.swing.JTextField MaSanPhamField;
    private javax.swing.JLabel MaSanPhamLabel;
    private javax.swing.JTextField NgayHoaDonField;
    private javax.swing.JLabel NgayHoaDonLabel;
    private javax.swing.JTextField SoLuongField;
    private javax.swing.JLabel SoLuongLabel;
    private javax.swing.JPanel Ten;
    private javax.swing.JTextField TenKhachHangField;
    private javax.swing.JLabel TenKhachHangLabel;
    private javax.swing.JTextField TenNhanVienField;
    private javax.swing.JLabel TenNhanVienLabel;
    private javax.swing.JTextField TenSanPhamField;
    private javax.swing.JLabel TenSanPhamLabel;
    private javax.swing.JTextField TenSuKienField;
    private javax.swing.JLabel TenSuKienLabel;
    private javax.swing.JLabel ThanhToanValue;
    private javax.swing.JButton ThemBtn;
    private javax.swing.JButton ThemHDBtn;
    private javax.swing.JButton ThoatBtn;
    private javax.swing.JButton TimKiemBtn;
    private javax.swing.JComboBox<String> TimKiemField;
    private javax.swing.JPanel TimKiemPanel;
    private javax.swing.JLabel TimKiemTheoLabel;
    private javax.swing.JLabel TriGiaValue;
    private javax.swing.JLabel TuKhoaLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
